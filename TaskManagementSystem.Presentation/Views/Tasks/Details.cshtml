@model TaskManagementSystem.Application.DTOs.TaskDto
@{
    ViewData["Title"] = "Task Details";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="bi bi-card-text"></i> Task Details
                    </h4>
                    <a asp-action="Index" class="btn btn-light btn-sm">
                        <i class="bi bi-arrow-left"></i> Back
                    </a>
                </div>

                <div class="card-body">
                    <h5 class="fw-bold mb-3">@Model.Title</h5>

                    <dl class="row mb-0">
                        <dt class="col-sm-3">Status</dt>
                        <dd class="col-sm-9">
                            @if (Model.IsCompleted)
                            {
                                <span class="badge text-bg-success">
                                    <i class="bi bi-check-circle"></i> Completed
                                </span>
                            }
                            else
                            {
                                <span class="badge text-bg-secondary">
                                    <i class="bi bi-clock"></i> Open
                                </span>
                            }
                        </dd>

                        <dt class="col-sm-3">Priority</dt>
                        <dd class="col-sm-9">
                            @switch (Model.Priority)
                            {
                                case TaskPriority.High:
                                    @:<span class="badge text-bg-danger">High</span>
                                    break;
                                case TaskPriority.Medium:
                                    @:<span class="badge text-bg-warning">Medium</span>
                                    break;
                                default:
                                    @:<span class="badge text-bg-secondary">Low</span>
                                    break;
                            }
                        </dd>

                        <dt class="col-sm-3">Due Date</dt>
                        <dd class="col-sm-9">@((Model.DueDate?.ToString("yyyy-MM-dd HH:mm") ?? "-"))</dd>

                        <dt class="col-sm-3">Description</dt>
                        <dd class="col-sm-9">
                            @if (!string.IsNullOrWhiteSpace(Model.Description))
                            {
                                @Model.Description
                            }
                            else
                            {
                                <span class="text-muted">No description provided.</span>
                            }
                        </dd>
                    </dl>
                </div>

                <div class="card-footer bg-light d-flex justify-content-between align-items-center small text-muted">
                    <span>
                        <i class="bi bi-calendar-plus"></i> Created: @Model.CreatedAtUtc:u
                        &nbsp; | &nbsp;
                        <i class="bi bi-calendar-check"></i> Updated: @Model.UpdatedAtUtc:u
                    </span>
                    <span><i class="bi bi-hash"></i> @Model.Id</span>
                </div>
            </div>

            <div class="d-flex justify-content-end gap-2 mt-4">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                    <i class="bi bi-pencil-square"></i> Edit
                </a>

                <!-- Trigger Delete modal -->
                <button type="button"
                        class="btn btn-danger"
                        data-bs-toggle="modal"
                        data-bs-target="#confirmDeleteModal"
                        data-action="@Url.Action("Delete", "Tasks", new { id = Model.Id })">
                    <i class="bi bi-trash"></i> Delete
                </button>

                @await Html.PartialAsync("_ConfirmDeleteModal")

            </div>
        </div>
    </div>
</div>